pipeline {
    agent any
    
    tools {
    jdk 'jdk9_update00'
    maven 'mvn_363'
    }
    stages {

        stage('Clean & package') {
            steps {
                sh "java -version"
                sh "cd 14-maven/helloworld/ && mvn clean package"
            }
        }

    /*
        stage('SonarQube Analysis') {
            steps {
                sh "cd 14-maven/helloworld/  && mvn sonar:sonar"
            }
        }
        
     
        
        stage('Sonarqube qualityGate') {
       
            steps {
                
                script {

                    withCredentials([string(credentialsId: 'sonarqubeToken', variable: 'SECRET')]) { //set SECRET with the credential content

                        def scannerHome = tool 'sonarqubeScanner'
                    
                    
                        withSonarQubeEnv('sonarqubeServer') {
                            sh "cd 14-maven/helloworld/ && ${scannerHome}/bin/sonar-scanner \
                                                        -Dsonar.projectKey=com.xavki:helloworld-app \
                                                        -Dsonar.sources=. \
                                                        -Dsonar.host.url=http://localhost:9000 \
                                                        -Dsonar.login=${SECRET}"
                            
                        }   
                        
                        timeout(time: 10, unit: 'MINUTES') {
                                waitForQualityGate abortPipeline: true
                        }

                    }

                }
            }
        }
    */

        stage('Tests SoapUI') {
            steps {
                sh "/opt/SmartBear/SoapUI-5.6.0/bin/testrunner.sh -r 14-maven/helloworld/tests/soapui/Project1-soapui-project.xml"
            }
        }
    }
}
